<div id="moundnode" class="container"></div>

<div id="griddata" class="container"></div>

<div id="fdt" class="container"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.6/react.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.14.6/react-dom.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react-bootstrap/0.28.5/react-bootstrap.min.js"></script>
<script stc="https://cdnjs.cloudflare.com/ajax/libs/fixed-data-table/0.6.0/fixed-data-table.min.js"></script>

<script>
			var Modal = ReactBootstrap.Modal;
			var Button = ReactBootstrap.Button;
			var OverlayTrigger = ReactBootstrap.OverlayTrigger;
</script>
<script type="text/babel">
    const ModalDetail = React.createClass({
    getInitialState() { return { showModal: false }; },
    close() { this.setState({ showModal: false }); },
    open() { this.setState({ showModal: true }); },
    render() {
    return (
    <div>
        <p>Click to get the full Modal experience!</p>

        <Button bsStyle="primary"
                bsSize="large"
                onClick={this.open}>
            Launch demo modal
        </Button>

        <Modal show={this.state.showModal} onHide={this.close}>
            <Modal.Header closeButton>
                <Modal.Title>Modal heading</Modal.Title>
            </Modal.Header>
            <Modal.Body>
                <h4>Text in a modal</h4>
                <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>
            </Modal.Body>
            <Modal.Footer>
                <Button className="btn btn-primary" onClick={this.close}>Save & Close</Button>
                <Button className="btn" onClick={this.close}>Close</Button>
            </Modal.Footer>
        </Modal>
    </div>
    );
    }
    });

    ReactDOM.render(
    <ModalDetail />, document.getElementById('moundnode'));
</script>

<script type="text/babel">
    var GridRow = React.createClass({
    render : function(){
    return (
    <tr>
        <td>{this.props.item.id}</td>
        <td>{this.props.item.code}</td>
        <td>{this.props.item.alpha3Code}</td>
        <td>{this.props.item.name}</td>
        <td>{this.props.item.localName}</td>
    </tr>
    );
    }
    });

    var GridTable = React.createClass({
    getInitialState: function(){ return { items:[] } },
    componentDidMount:function(){
    $.get(this.props.dataUrl, function(data){
    if(this.isMounted()){
    this.setState({ items: data });
    }
    }.bind(this));
    },
    render: function(){
    var rows = [];
    this.state.items.forEach(function(item){
    rows.push(
    <GridRow key={item.id} item={item} />);
    });
    return (
    <table className="table table-bordered table-responsive">
        <thead>
            <tr>
                <th>Num.Code</th>
                <th>ISO Code</th>
                <th>Alpha-3 Code</th>
                <th>Name</th>
                <th>Local Name</th>
            </tr>
        </thead>
        <tbody>
            {rows}
        </tbody>
    </table>);
    }
    });

    ReactDOM.render(
    <GridTable dataUrl="/common/country/list" />,
    document.getElementById('griddata')
    );
</script>

